{
  "hash": "aed3fc64eee05ea0f9fce26499207ab5",
  "result": {
    "markdown": "---\ntitle: Setting up a minimal data-science environment in Windows using WSL (part II)\neval: false \ncategories: [code, linux, setup]\n---\n\n# Set up a conda environment for data-science\n\nNow that we have conda installed, let us set up a conda environment called `ds` (for data-science). Open WSL, then run\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nconda create -n ds \n```\n:::\n\n\nActivate the environment:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nconda activate ds\n```\n:::\n\n\nWhen you now run `python3`, it will launch the version of the python interpreter that came with anaconda (in the previous step), not the version that comes pre-installed with WSL.\n\nYou can now install the following basic data-science packages:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nconda install numpy scipy matplotlib seaborn scikit-learn pandas Jupyter\n```\n:::\n\n\n::: {.callout-tip}\n### Installing packages through conda forge\nConda official repository only feature a few verified packages. A vast portion of python packages that are otherwise available through pip are installed through community led channel called conda-forge. You can visit their site to learn more about it.\nTo do this, install your other packages `package1` and `package2` (say), by specifying the `conda-forge` channel :\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nconda install -c conda-forge package1 package2\n```\n:::\n\n\n:::\n\n### Test your installation:\n\nWe now test the installation by using the following workflow:\n\n* Create a python script using the **Windows** text editor of your choice, save it in your `~/Downloads` folder. \n* Execute the script from Bash.\n\nCreate a new file called `test.py` in `~/Downloads` with the following content:\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom scipy import stats\n\n# Generate some random data\nnp.random.seed(42)\nx = np.random.normal(size=100)\ny = np.random.normal(size=100)\n\n# Create a DataFrame from the data\ndf = pd.DataFrame({'x': x, 'y': y})\n\n# Plot a scatter plot using Seaborn\nsns.scatterplot(data=df, x='x', y='y')\n\n# Add a regression line using SciPy\nslope, intercept, r_value, p_value, std_err = stats.linregress(x, y)\nplt.plot(x, slope * x + intercept, color='red')\n\n# Set the x and y labels using Matplotlib\nplt.xlabel('X')\nplt.ylabel('Y')\n\n# Show the plot\nplt.show()\n```\n:::\n\n\nand run it with \n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\npython3 ~/Downloads/test.py\n```\n:::\n\n\n",
    "supporting": [
      "WSL_files"
    ],
    "filters": [],
    "includes": {}
  }
}