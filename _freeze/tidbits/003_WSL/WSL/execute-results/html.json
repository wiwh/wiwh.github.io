{
  "hash": "7d77328fe5b55ffa4d83c03c29f0ca26",
  "result": {
    "markdown": "---\ntitle: Setting up a minimal data-science environment in Windows using WSL (part I)\neval: false \ncategories: [code, linux, setup]\n---\n\n# Install Conda in WSL\nThis is the first part of a series of tidbits to set up a data-science environement in linux alongside windows, using windows subsystem for linux (WSL).\n\nThis will include conda as a package / environment manager, using the minimal version miniconda, and the following data-science packages installed for the default interpreter.\n\n* numpy\n* scipy\n* scikit-learn\n* matplotlib\n* seaborn\n* pandas\n* Jupyter\n\nFor deep learning packages, this comes next.\n\n## Install WSL\nInstall WSL: Open a powershell as administrator and run\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nwsl --install\n```\n:::\n\n\nCheck the installation and version with\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nwsl -l -v\n```\n:::\n\n\nTo activate the Bash shell type\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nwsl\n```\n:::\n\n\nTo exit the shell type\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nexit\n```\n:::\n\n\nYou can now use Bash to run linux tools and applications. During the installation process, make note of your *login* and *password*. \n\n### Accessing your folders and setting things up\n\nYour `home` directory is accessed  using `cd ~`. Create a `Downloads` directory and navigate to it:\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ncd ~\nmkdir Downloads\ncd Downloads\n```\n:::\n\n\nYou can use `explorer.exe .` to open File Explorer from the current directory.\n\n## Update the Linux distribution\nRun the following code to update the linux distribution you just installed and make sur it is up-to-date:\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nsudo apt update\nsudo apt upgrade\n```\n:::\n\n\n## Install python 3\nPython comes pre-installed in WSL. Check the version:\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\npython3 --version\n```\n:::\n\n\nIf somehow it is not installed, you can install it by running\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nsudo apt install python3\n```\n:::\n\n\n## Install miniconda\n\nEven though WSL comes with python 3 pre-installed, we will use miniconda's python distribution, which includes a package manager. \n\nGo to [https://docs.conda.io/en/latest/miniconda.html](https://docs.conda.io/en/latest/miniconda.html) to download the installer of your choice (listed under Linux). At the time of this writing the latest installer includes Python 3.10, and put it inside your `~/Downloads` folder, which is accessible from windows using the above-mentioned `explorer.exe .` command.\n\nPlace your downloaded file in this directory.\n\n::: {.callout-caution collapse=\"true\"}\n### Copying files from Windows to WSL\nWhen you copy a file from Windows to a Linux directory in WSL, Windows may add a `Zone.Identifier` file to the directory containing the copied file. This is because Windows considers the Linux directory to be a network location, and adds the file to provide security information for the copied file.\n\nThe `Zone.Identifier` file is used by Windows to help protect against the execution of potentially harmful files that may have been downloaded from the internet or copied from an untrusted source. When a file is opened, Windows checks the `Zone.Identifier` file to determine if the file is safe to execute.\n\nThis may prevent you from installing the file you just downloaded. In this case, simply delete the `Zone.Identifier` file.\n:::\n\nMake the script executable:\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nchmod +x your_conda_installer.sh\n```\n:::\n\n\nAnd run the bash script:\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n./your_conda_installer.sh\n```\n:::\n\n\nFollow the prompts, say `yes` to all. Quit WSL and start again so it recognizes the path to conda.\n\nYou're done! Check your conda version using `conda --version`.\n\n",
    "supporting": [
      "WSL_files"
    ],
    "filters": [],
    "includes": {}
  }
}